- hosts: "{{ hosts }}"
  gather_facts: no
  serial: 1
  tasks:
    - name: Step:1/8:Get the AppInstance ID(e.host:port) from eureka. 
      shell: curl -s "{{ EurekaUrl }}" |grep `hostname`:"{{ AppSpringName }}:" |awk -F / '{print $3}'
      register: AppInstance
    - name: Step:2/8:Get the DockerAppId which is running. 
      shell: docker ps|egrep '{{ DockerApp }}(\ |:|-20)'|awk '{print $1}'
      register: DockerAppId
    - name: Step:3/8:Download docker image.
      command: docker pull "{{ DockerImageURL }}{{ DockerApp }}:{{ DockerImageTag }}"
    - name: Step:4/8:Deregister service.
      shell: curl  -s --max-time 3 http://"{{ AppInstance.stdout }}"/health/deregister
    - name: Step:5/8:Securyty wait times for eureka server&client cache refresh (default 60s).
      command: sleep "{{ WaitTimes }}"
    - name: Step:6/8:Docker app stop. 
      command: docker stop "{{ DockerAppId.stdout }}"
      register: msg2
      failed_when: "'FAILED' in msg2.stderr"  
    - name: Step:7/8:Docker app run.
      command: "{{ DockerRun }}"
    - name: Step:8/8:LoopHealthCheck until successful, max time(2min).
      script: sc_eureka_health_check.sh "{{ EurekaUrl }}" "{{ AppSpringName }}"



